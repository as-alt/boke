"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[573],{8741:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5036a984",path:"/guide/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/JAVASCRIPT/this%E7%9A%84%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"this的指向问题",slug:"this的指向问题",children:[]}],filePathRelative:"guide/面试刷题/JAVASCRIPT/this的指向问题.md",git:{}}},2239:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="this的指向问题" tabindex="-1"><a class="header-anchor" href="#this的指向问题" aria-hidden="true">#</a> this的指向问题</h2><h4 id="普通函数中的this指向调用时确定" tabindex="-1"><a class="header-anchor" href="#普通函数中的this指向调用时确定" aria-hidden="true">#</a> 普通函数中的this指向调用时确定</h4><h4 id="函数直接调用-默认指向window全局对象" tabindex="-1"><a class="header-anchor" href="#函数直接调用-默认指向window全局对象" aria-hidden="true">#</a> 函数直接调用,默认指向window全局对象</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;小李&#39;</span>\n<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 小李 相当于使用fn.call(window)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="对象调用函数-谁调用的就指向谁" tabindex="-1"><a class="header-anchor" href="#对象调用函数-谁调用的就指向谁" aria-hidden="true">#</a> 对象调用函数,谁调用的就指向谁</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span><span class="token string">&#39;小张&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">fn</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nobj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 小张 相当于使用obj.fn.call(obj)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="实例题" tabindex="-1"><a class="header-anchor" href="#实例题" aria-hidden="true">#</a> 实例题</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>            <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token number">222</span>\n            <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>\n                name<span class="token operator">:</span><span class="token number">111</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">say</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">var</span> fn <span class="token operator">=</span> a<span class="token punctuation">.</span>say\n            <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//222 相当于使用fn.call(window)</span>\n            a<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//111 a.say.call(a)</span>\n\n            <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>\n                name<span class="token operator">:</span><span class="token number">333</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">say</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//222 fn.call(window)</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            b<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>say<span class="token punctuation">)</span>\n            b<span class="token punctuation">.</span>say <span class="token operator">=</span> a<span class="token punctuation">.</span>say\n            b<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//333 b.say.call(b)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',8),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);