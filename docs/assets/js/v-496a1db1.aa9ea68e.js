"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[9230],{969:(a,s,n)=>{n.r(s),n.d(s,{data:()=>e});const e={key:"v-496a1db1",path:"/guide/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/CSS3/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"清除浮动的方法",slug:"清除浮动的方法",children:[]}],filePathRelative:"guide/面试刷题/CSS3/清除浮动的方法.md",git:{}}},9995:(a,s,n)=>{n.r(s),n.d(s,{default:()=>t});const e=(0,n(6252).uE)('<h2 id="清除浮动的方法" tabindex="-1"><a class="header-anchor" href="#清除浮动的方法" aria-hidden="true">#</a> 清除浮动的方法</h2><p>方法一:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">.</span>parent<span class="token punctuation">{</span>\n    overflow<span class="token operator">:</span>hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>方法二:在浮动元素后面添加一个块级元素,设置clear:both;</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;float&quot;</span><span class="token operator">&gt;</span>float元素<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">&quot;clear:both;&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>方法三:在父元素处使用伪类元素</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">.</span>parent<span class="token operator">:</span><span class="token operator">:</span>after<span class="token punctuation">{</span>\n    content<span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n    display<span class="token operator">:</span>block<span class="token punctuation">;</span>\n    clear<span class="token operator">:</span>both<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',7),p={},t=(0,n(3744).Z)(p,[["render",function(a,s){return e}]])},3744:(a,s)=>{s.Z=(a,s)=>{const n=a.__vccOpts||a;for(const[a,e]of s)n[a]=e;return n}}}]);