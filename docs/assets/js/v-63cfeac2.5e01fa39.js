"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[3785],{1255:(s,a,n)=>{n.r(a),n.d(a,{data:()=>t});const t={key:"v-63cfeac2",path:"/guide/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/HTML5/DOCTYPE%E6%A0%87%E7%AD%BE%E7%9A%84%E4%BD%9C%E7%94%A8.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"DOCTYPE标签的作用",slug:"doctype标签的作用",children:[]}],filePathRelative:"guide/面试刷题/HTML5/DOCTYPE标签的作用.md",git:{}}},492:(s,a,n)=>{n.r(a),n.d(a,{default:()=>p});const t=(0,n(6252).uE)('<h2 id="doctype标签的作用" tabindex="-1"><a class="header-anchor" href="#doctype标签的作用" aria-hidden="true">#</a> DOCTYPE标签的作用</h2><p>浏览器的排版引擎有三种模式:标准模式,接近标准模式,怪异模式</p><p>使用DOCTYPE声明可以觉得使用哪种模式解析HTML或XHTML</p><p><strong>在 HTML5 中，DOCTYPE 唯一的作用是启用标准模式。</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span><span class="token comment">//默认 标准模式</span>\n<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">&quot;X-UA-Compatible&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;IE=edge&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n    \n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',5),e={},p=(0,n(3744).Z)(e,[["render",function(s,a){return t}]])},3744:(s,a)=>{a.Z=(s,a)=>{const n=s.__vccOpts||s;for(const[s,t]of a)n[s]=t;return n}}}]);