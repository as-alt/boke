"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[606],{2607:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-77c67f15",path:"/guide/js%E9%AB%98%E7%A8%8B%E6%89%8B%E8%AE%B0/%E6%95%B0%E7%BB%84reduce%E6%96%B9%E6%B3%95%E5%8E%BB%E9%87%8D.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"数组内对象去重",slug:"数组内对象去重",children:[]}],filePathRelative:"guide/js高程手记/数组reduce方法去重.md",git:{}}},4890:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h2 id="数组内对象去重" tabindex="-1"><a class="header-anchor" href="#数组内对象去重" aria-hidden="true">#</a> 数组内对象去重</h2><h4 id="reduce-累加器-当前值-当前索引-所调用的数组" tabindex="-1"><a class="header-anchor" href="#reduce-累加器-当前值-当前索引-所调用的数组" aria-hidden="true">#</a> reduce((累加器,当前值,当前索引,所调用的数组)=&gt;{</h4><h4 id="必须要有返回值" tabindex="-1"><a class="header-anchor" href="#必须要有返回值" aria-hidden="true">#</a> !!!<strong>必须要有返回值</strong>!!!</h4><h4 id="累加器第一次的初始值" tabindex="-1"><a class="header-anchor" href="#累加器第一次的初始值" aria-hidden="true">#</a> },累加器第一次的初始值)</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        id<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span><span class="token string">&#39;小王&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        id<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span><span class="token string">&#39;小张&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        id<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span><span class="token string">&#39;小李&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        id<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span><span class="token string">&#39;小陈&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        id<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span><span class="token string">&#39;小红&#39;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">let</span> data <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">beforeValue<span class="token punctuation">,</span>nowValue</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>nowValue<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> beforeValue <span class="token comment">//必须</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">[</span>nowValue<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> nowValue<span class="token punctuation">.</span>name\n        beforeValue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nowValue<span class="token punctuation">)</span>\n        <span class="token keyword">return</span> beforeValue <span class="token comment">//必须</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><img src="/boke/js高程/数组去重.png" alt=""></p>',6),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);