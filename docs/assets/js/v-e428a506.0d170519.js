"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[275],{2097:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-e428a506",path:"/guide/js%E9%AB%98%E7%BA%A7/%E8%A7%A3%E6%9E%90instanceof.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"解析instanceof",slug:"解析instanceof",children:[]}],filePathRelative:"guide/js高级/解析instanceof.md",git:{}}},3236:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h2 id="解析instanceof" tabindex="-1"><a class="header-anchor" href="#解析instanceof" aria-hidden="true">#</a> 解析instanceof</h2><h4 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>a <span class="token keyword">instanceof</span> <span class="token class-name">b</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="判断b函数的prototype显式原型是否在a对象的-proto-隐式原型链上" tabindex="-1"><a class="header-anchor" href="#判断b函数的prototype显式原型是否在a对象的-proto-隐式原型链上" aria-hidden="true">#</a> 判断b函数的prototype显式原型是否在a对象的__proto__隐式原型链上</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Object instanceof Function</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> Object <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token comment">//true</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Object instanceof Object</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> Object <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token comment">//true</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Function instanceof Function</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> Function <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token comment">//true</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Function instanceof Object</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> Function <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token comment">//true</span>\n\n        <span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Object instanceof Foo</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> Object <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span><span class="token comment">//false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="图解" tabindex="-1"><a class="header-anchor" href="#图解" aria-hidden="true">#</a> 图解</h4><p><img src="/boke/js高级/解析instanceof.png" alt=""></p>',7),e={},p=(0,a(3744).Z)(e,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);