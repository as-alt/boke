"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[1092],{3956:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-2a11f515",path:"/guide/js%E9%AB%98%E7%A8%8B%E6%89%8B%E8%AE%B0/%E7%94%9F%E6%88%90%E5%99%A8.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"创建生成器",slug:"创建生成器",children:[]}],filePathRelative:"guide/js高程手记/生成器.md",git:{}}},9326:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h2 id="创建生成器" tabindex="-1"><a class="header-anchor" href="#创建生成器" aria-hidden="true">#</a> 创建生成器</h2><h4 id="以下内置类型都可以使用迭代器" tabindex="-1"><a class="header-anchor" href="#以下内置类型都可以使用迭代器" aria-hidden="true">#</a> 以下内置类型都可以使用迭代器</h4><p><img src="/boke/js高程/迭代器1.png" alt=""></p><h4 id="创建生成器函数" tabindex="-1"><a class="header-anchor" href="#创建生成器函数" aria-hidden="true">#</a> 创建生成器函数</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token operator">*</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">yield</span> <span class="token number">1</span>\n    <span class="token keyword">yield</span> <span class="token number">2</span>\n    <span class="token keyword">yield</span> <span class="token number">3</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//调用不执行函数内代码,返回一个生成器对象</span>\n<span class="token comment">//使用next()方法让生成器开始运行,yield关键字会使生成器中断运行,函数作用域的状态会保留，只能通过next()方法恢复运行</span>\na<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//{done:false,value:1}</span>\na<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//{done:false,value:2}</span>\na<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//{done:false,value:3}</span>\n<span class="token comment">//</span>\na<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//{done:true,value:undefind}</span>\na<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//{done:true,value:undefind}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',5),p={},t=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);