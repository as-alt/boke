"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[9722],{1666:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-cc7ed334",path:"/guide/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/%E6%89%8B%E5%86%99%E9%A2%98/bind.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"bind",slug:"bind",children:[]}],filePathRelative:"guide/面试刷题/手写题/bind.md",git:{}}},3511:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="bind" tabindex="-1"><a class="header-anchor" href="#bind" aria-hidden="true">#</a> bind</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>obj <span class="token operator">!=</span> undefine<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        obj<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>\n        <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">that</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',2),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);