"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[4616],{6692:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-042358cb",path:"/guide/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/VUE/%E7%BB%84%E4%BB%B6%E9%97%B4%E7%9A%84%E4%BC%A0%E5%80%BC.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"组件间的传值",slug:"组件间的传值",children:[{level:3,title:"父传子",slug:"父传子",children:[]},{level:3,title:"子传父",slug:"子传父",children:[]},{level:3,title:"兄弟传值",slug:"兄弟传值",children:[]}]}],filePathRelative:"guide/面试刷题/VUE/组件间的传值.md",git:{}}},8152:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h2 id="组件间的传值" tabindex="-1"><a class="header-anchor" href="#组件间的传值" aria-hidden="true">#</a> 组件间的传值</h2><h3 id="父传子" tabindex="-1"><a class="header-anchor" href="#父传子" aria-hidden="true">#</a> 父传子</h3><p>父组件在子组件上传值，子组件使用props属性接收</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//父组件传值</span>\n<span class="token operator">&lt;</span>children <span class="token operator">:</span>msg<span class="token operator">=</span><span class="token string">&quot;name&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>children<span class="token operator">&gt;</span>\n<span class="token comment">//父组件参数</span>\n<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span><span class="token string">&#39;老王&#39;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//子组件使用</span>\n<span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n<span class="token comment">//子组件接收</span>\nprops<span class="token operator">:</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span><span class="token punctuation">{</span>\n        type<span class="token operator">:</span>String<span class="token punctuation">,</span>\n        <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="子传父" tabindex="-1"><a class="header-anchor" href="#子传父" aria-hidden="true">#</a> 子传父</h3><p>子组件通过Vue.$emit(&#39;事件名称&#39;,&#39;要传递的数据&#39;)方法传递,父组件在子组件上定义事件,通过事件方法接收,<strong>事件名称为emit定义的事件名称</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//子组件传值</span>\n<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;childrenEvent&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;小李&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//父组件接收并使用</span>\n<span class="token operator">&lt;</span>children @childrenEvent<span class="token operator">=</span><span class="token string">&quot;getChildrenMsg&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>children<span class="token operator">&gt;</span>\nmethods<span class="token punctuation">{</span>\n    <span class="token function">getChildrenMsg</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token comment">//小李</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="兄弟传值" tabindex="-1"><a class="header-anchor" href="#兄弟传值" aria-hidden="true">#</a> 兄弟传值</h3><p>通过全局定义或引入eventbus事件,使用$emit(&#39;事件名称&#39;,&#39;要传递的数据&#39;)传值，$on(&#39;事件名称&#39;,function(e){})接收</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//vue全局定义eventbus事件</span>\nvue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$eventbus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">//传值</span>\n<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>$eventbus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;brotherEvent&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;小李&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//接收</span>\n<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>$eventbus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;brotherEvent&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;小李&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',10),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);