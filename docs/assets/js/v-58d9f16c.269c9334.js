"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[3867],{7726:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-58d9f16c",path:"/guide/js%E9%AB%98%E7%A8%8B%E6%89%8B%E8%AE%B0/%E5%88%9B%E5%BB%BA%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"使用Weakmap实例方法创建私有变量",slug:"使用weakmap实例方法创建私有变量",children:[]}],filePathRelative:"guide/js高程手记/创建私有变量.md",git:{}}},9102:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="使用weakmap实例方法创建私有变量" tabindex="-1"><a class="header-anchor" href="#使用weakmap实例方法创建私有变量" aria-hidden="true">#</a> 使用Weakmap实例方法创建私有变量</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> pv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> pm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Parent</span><span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&quot;公有变量&quot;</span><span class="token punctuation">;</span>\n        pv<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">&quot;私有变量&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pm<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;私有方法&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">getPv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pv<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">getPm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> pm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> par <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>par<span class="token punctuation">)</span><span class="token comment">//见图1</span>\n<span class="token keyword">let</span> getP <span class="token operator">=</span> par<span class="token punctuation">.</span><span class="token function">getPm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;getP&#39;</span><span class="token punctuation">,</span>getP<span class="token punctuation">)</span><span class="token comment">//见图2</span>\n<span class="token function">getP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//见图2</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pv<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>par<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//见图3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h4 id="图1-类实例-par-中不存在私有变量及私有方法" tabindex="-1"><a class="header-anchor" href="#图1-类实例-par-中不存在私有变量及私有方法" aria-hidden="true">#</a> 图1：类实例(par)中不存在私有变量及私有方法</h4><p><img src="/boke/js高程/私有变量1.png" alt="图1"></p><h4 id="图2-要使用私有变量或私有方法必须要将其暴露出来才可使用" tabindex="-1"><a class="header-anchor" href="#图2-要使用私有变量或私有方法必须要将其暴露出来才可使用" aria-hidden="true">#</a> 图2:要使用私有变量或私有方法必须要将其暴露出来才可使用</h4><p><img src="/boke/js高程/私有变量2.png" alt="image-20211207162345002"></p><p><img src="/boke/js高程/私有变量3.png" alt="图2"></p><h4 id="图3-该例子中不能算完全的私有变量-如果在外部直接使用weakmap-get-类实例-私有变量会被直接暴露出来" tabindex="-1"><a class="header-anchor" href="#图3-该例子中不能算完全的私有变量-如果在外部直接使用weakmap-get-类实例-私有变量会被直接暴露出来" aria-hidden="true">#</a> 图3：该例子中不能算完全的私有变量，如果在外部直接使用WeakMap().get(类实例),私有变量会被直接暴露出来</h4><p><img src="/boke/js高程/私有变量4.png" alt="image-20211207162945389"></p><p><img src="/boke/js高程/私有变量5.png" alt="image-20211207162814015"></p>',10),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);