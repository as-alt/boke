"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[3055],{2517:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-796a7299",path:"/guide/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/VUE/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/$nextTick%E8%8E%B7%E5%8F%96%E6%9C%80%E6%96%B0%E7%9A%84dom.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"$nextTick获取最新的dom",slug:"nexttick获取最新的dom",children:[{level:3,title:"由于vue数据更新采用异步的方式,所以会出现数据更新后获取DOM元素不更新的情况,这时可以使用this.$nextTick(callback)的方式获取最新的DOM",slug:"由于vue数据更新采用异步的方式-所以会出现数据更新后获取dom元素不更新的情况-这时可以使用this-nexttick-callback-的方式获取最新的dom",children:[]}]}],filePathRelative:"guide/面试刷题/VUE/高级特性/$nextTick获取最新的dom.md",git:{}}},9225:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});const e=(0,a(6252).uE)('<h2 id="nexttick获取最新的dom" tabindex="-1"><a class="header-anchor" href="#nexttick获取最新的dom" aria-hidden="true">#</a> $nextTick获取最新的dom</h2><h3 id="由于vue数据更新采用异步的方式-所以会出现数据更新后获取dom元素不更新的情况-这时可以使用this-nexttick-callback-的方式获取最新的dom" tabindex="-1"><a class="header-anchor" href="#由于vue数据更新采用异步的方式-所以会出现数据更新后获取dom元素不更新的情况-这时可以使用this-nexttick-callback-的方式获取最新的dom" aria-hidden="true">#</a> 由于vue数据更新采用异步的方式,所以会出现数据更新后获取DOM元素不更新的情况,这时可以使用this.$nextTick(callback)的方式获取最新的DOM</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hDom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeMsg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>改变<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n\ndata(){\n    return{\n        msg:&#39;message&#39;\n    }\n},\nmethods:{\n    changeMsg(){\n        this.msg = &#39;newMessage&#39;\n        console.log(this.$refs[&#39;hDom&#39;].innerHTML)//message\n        this.$nextTick(function(){\n            console.log(this.$refs[&#39;hDom&#39;].innerHTML)//newMessage\n        })\n    }\n}\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',3),t={},l=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);