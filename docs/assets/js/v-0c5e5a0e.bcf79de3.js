"use strict";(self.webpackChunkaaa=self.webpackChunkaaa||[]).push([[568],{8869:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-0c5e5a0e",path:"/guide/js%E9%AB%98%E7%BA%A7/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"回调函数",slug:"回调函数",children:[]}],filePathRelative:"guide/js高级/回调函数.md",git:{}}},9818:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h2 id="回调函数" tabindex="-1"><a class="header-anchor" href="#回调函数" aria-hidden="true">#</a> 回调函数</h2><h4 id="什么是回调函数" tabindex="-1"><a class="header-anchor" href="#什么是回调函数" aria-hidden="true">#</a> 什么是回调函数</h4><p>自己定义的方法,不是自己调用</p><h4 id="常见的回调函数" tabindex="-1"><a class="header-anchor" href="#常见的回调函数" aria-hidden="true">#</a> 常见的回调函数</h4><p>1.dom事件回调函数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">queryselector</span><span class="token punctuation">(</span><span class="token string">&#39;.dom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndom<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;用户点击了&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>2.定时器回调函数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;定时器触发了&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',8),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);